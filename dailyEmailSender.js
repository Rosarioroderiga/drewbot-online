const cron = require('node-cron');
const nodemailer = require('nodemailer');
const fs = require('fs');
const path = '/tmp/conversations.json';

// Funkcja wysy≈ÇajƒÖca rozmowy jako ≈Çadny czat
const sendConversationsEmail = async () => {
  if (!fs.existsSync(path)) {
    console.log('Brak rozm√≥w do wys≈Çania.');
    return;
  }

  const fileData = fs.readFileSync(path, 'utf8');
  let conversations = [];

  try {
    conversations = JSON.parse(fileData || '[]');
  } catch (err) {
    console.error('Nie uda≈Ço siƒô sparsowaƒá rozm√≥w:', err);
    return;
  }

  if (conversations.length === 0) {
    console.log('Brak tre≈õci do wys≈Çania.');
    return;
  }

  const chatFormat = conversations.map(entry => {
    return `U≈ºytkownik: ${entry.userMessage}\nDrew: ${entry.drewReply}\n`;
  }).join('\n');

  const transporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
      user: process.env.MY_EMAIL_ADDRESS,
      pass: process.env.MY_EMAIL_PASSWORD
    }
  });

  const mailOptions = {
  from: process.env.MY_EMAIL_ADDRESS,
  to: process.env.MY_EMAIL_ADDRESS,
  subject: `üêæ DrewBot Testowy Mail ‚Äî Sprawd≈∫ Spam! üêæ`,
  text: `Hej! To jest testowy e-mail od DrewBota.

Je≈õli widzisz tƒô wiadomo≈õƒá, oznacza to, ≈ºe Drew w≈Ça≈õnie wsta≈Ç z kanapy i nauczy≈Ç siƒô wysy≈Çaƒá maile.

Je≈õli masz tƒô wiadomo≈õƒá w Spamie ‚Äî oznacz jƒÖ jako "NIE SPAM", ≈ºeby nastƒôpne trafia≈Çy normalnie!

Dziƒôki za cierpliwo≈õƒá üçï‚òïüñ§

‚Äî Drew`
};


  try {
    await transporter.sendMail(mailOptions);
    console.log('‚úâÔ∏è Dzienny e-mail z rozmowƒÖ wys≈Çany!');
    fs.writeFileSync(path, '[]');
  } catch (error) {
    console.error('B≈ÇƒÖd wysy≈Çki rozmowy:', error);
  }
};

// CRON: Wy≈õlij rozmowy codziennie o 21:00
cron.schedule('0 19 * * *', async () => {
  console.log('‚è∞ 21:00 ‚Äî DrewBot wysy≈Ça rozmowy!');
  await sendConversationsEmail();
});

module.exports = { sendConversationsEmail };
